version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: expense_tracker_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # networks:
    #   - backend

  # Redis for Sidekiq background jobs
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    # networks:
    #   - backend

  # Rails Application
  web:
    build: .
    ports:
      - "3000:80"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RAILS_ENV=production
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=expense_tracker_development
      - REDIS_URL=redis://redis:6379/0
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=${PLAID_ENV:-sandbox}
      - DEVISE_JWT_SECRET_KEY=${DEVISE_JWT_SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3001}
    volumes:
      - ./storage:/rails/storage
      - ./log:/rails/log
    restart: unless-stopped
    command: >
      sh -c "
        bundle exec rails db:create db:migrate &&
        bundle exec rails server -b 0.0.0.0 -p 80
      "
    # networks:
    #   - frontend
    #   - backend

  # Development version (alternative to production)
  web-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RAILS_ENV=development
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - REDIS_URL=redis://redis:6379/0
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=${PLAID_ENV:-sandbox}
      - DEVISE_JWT_SECRET_KEY=${DEVISE_JWT_SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3001}
    volumes:
      - .:/rails
      - bundle_cache:/usr/local/bundle
    restart: unless-stopped
    command: >
      sh -c "
        bundle install &&
        bundle exec rails db:create db:migrate &&
        bundle exec rails server -b 0.0.0.0 -p 3000
      "
    profiles:
      - dev
    # networks:
    #   - frontend
    #   - backend

  # Sidekiq for background jobs
  sidekiq:
    build: .
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - RAILS_ENV=production
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=expense_tracker_development
      - REDIS_URL=redis://redis:6379/0
      - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
      - PLAID_SECRET=${PLAID_SECRET}
      - PLAID_ENV=${PLAID_ENV:-sandbox}
      - DEVISE_JWT_SECRET_KEY=${DEVISE_JWT_SECRET_KEY}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    volumes:
      - ./storage:/rails/storage
      - ./log:/rails/log
    restart: unless-stopped
    command: bundle exec sidekiq
    profiles:
      - sidekiq
    # networks:
    #   - backend

volumes:
  postgres_data:
  redis_data:
  bundle_cache:

# Optional: Custom networks for service isolation
# Uncomment if you want to restrict which services can communicate
# networks:
#   frontend:
#     driver: bridge
#   backend:
#     driver: bridge 